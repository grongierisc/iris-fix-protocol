 do $SYSTEM.OBJ.Load("/irisdev/app/Installer.cls", "ck")
 set sc = ##class(App.Installer).setup() 

 zn "IRISAPP"
 zpm "install pex-embbeded-python" 
 do $System.OBJ.LoadDir("/irisdev/app/src","ck",,1)
 zw $SYSTEM.OBJ.ImportDir("/irisdev/app/src", "*.cls", "cubk", .tErrors, 1)
 zpm "install sslclient"

 //Register Python code
  
 zw ##class(Grongier.PEX.Utils).RegisterComponent("bo","FixOrderOperation","/irisdev/app/src/fix/",1,"Python.FixOrderOperation")
 zw ##class(Grongier.PEX.Utils).RegisterComponent("adapter","OrderAdapter","/irisdev/app/src/fix/",1,"Python.OrderAdapter")

 zw ##class(Grongier.PEX.Utils).RegisterComponent("bo","FixQuoteOperation","/irisdev/app/src/fix/",1,"Python.FixQuoteOperation")
 zw ##class(Grongier.PEX.Utils).RegisterComponent("adapter","QuoteAdapter","/irisdev/app/src/fix/",1,"Python.QuoteAdapter")

 zw ##class(Grongier.PEX.Utils).RegisterComponent("bp","FixBusinessProcess","/irisdev/app/src/fix/",1,"Python.FixBusinessProcess")


 set ^EnsPortal.Settings("SuperUser","LastProduction")	= "fix.QuickFixProduction"
 
 zn "%SYS"
 Do ##class(Security.Users).UnExpireUserPasswords("*")

 do ##class(Security.Services).Get("%Service_CallIn",.prop)
 set prop("Enabled")=1
 set prop("AutheEnabled")=48
 do ##class(Security.Services).Modify("%Service_CallIn",.prop)

halt
